为什么要使用纹理过滤：
	在任意的3D表面的纹理映射中，需要进行纹理的查找来找到屏幕上的一个像素对应纹理中的哪一个位置的像素点
	显然当物体里相机的距离发生变化时，3D物体的表面占用屏幕上的像素的大小也会发生变化
	当物体里屏幕近：可能很多个屏幕的像素点对应纹理中的同一个点
	当物体离屏幕远：可能两个屏幕像素点在纹理的对应的位置相差很远

Unity提供了三种纹理过滤的模式：
	Point：使用最近点采样点的纹素作为采样的结果
	Bilinear: 使用双线性过滤，会使用采样点的附近的4个点的纹素，并根据距离进行加权平均。
	Trilinear:当纹理与相机的距离在两个mipmap之间时，通过对相邻的两个mipmap等级的纹理进行双线性过滤采样，再对两个结果进行线性插值就得到了结果
				当纹理足够近时，因为使用mipmap0这个等级就和双线性过滤是一样的
	