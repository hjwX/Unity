矩阵变换的个人理解:
	三种矩阵变换:缩放，平移，旋转
	计算的一般顺序是，缩放 > 平移 > 旋转(z > x > y)
	物体的transform记录了物体原点在世界坐标系下的坐标，旋转，缩放
	理解:其实物体原点坐标就是世界坐标的原点变换来的，具体的变换记录在transform里面
	根据transform可以计算出M(C->P)，即子坐标系下的坐标转换到世界坐标系的矩阵
	子物体的transform
	M(C->P) = Matrix.SetTRS(transform.localPosition, transform.rotation, transform.localScale);
	子物体坐标系下的坐标P(C)则有：
		坐标在世界坐标系下的坐标P(W) = M(C->P)P(C)
	Ps:简单的理解，把子物体放在世界坐标系的原点位置，再根据子物体原点的变换给其他点做相同的变换就得到了
		对应世界坐标系下的位置坐标
		
正交矩阵:如果矩阵A和自己的转置AT的乘积为I(单位矩阵)则称A为正交矩阵
		很明显A的转置也是正交矩阵

其实相机只是决定了近截面和远截面的距离，再根据相机的张角的大小Fov可以计算出相机截面的高度
所以其实相机只限制了屏幕的高度，宽度由相机的宽高比计算出来

齐次坐标w的一些理解:
	向量用齐次坐标表示为(x,y,z,0)w分量为0
	坐标用齐次坐标表示为(x,y,z,1)w分量为1
	某个名人："齐次坐标表示是计算机图像学的重要手段之一，它既能够明确的区分向量和点，而已更易进行仿射(线性)变换"
	对于一个普通的坐标(x, y, z)有对应的一族齐次坐标(wx, wy, wz, w)(w不为0)
	所以一个齐次坐标(x, y, z, w)转换成普通坐标为(x/w, y/w, z/w)同时去掉第四个分量w

透视投影矩阵的推导:
	
	